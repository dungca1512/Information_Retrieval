[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Admin\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Admin\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.9 (Oracle Corporation Java 11.0.22)
[debug] Load.defaultLoad until apply took 314.8641ms
[debug]                 Load.loadUnit: plugins took 153.1147ms
[debug]                 Load.loadUnit: defsScala took 0.3826ms
[debug] [Loading] Scanning directory E:\IdeaProjects\Information_Retrieval\project\project
[debug]                   Load.loadUnit: mkEval took 12.1613ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\IdeaProjects\Information_Retrieval\project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 21.3928 ms
[info] loading settings for project information_retrieval-build-build from metals.sbt ...
[debug]                     Load.resolveProject(information_retrieval-build-build) took 68.9658ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id information_retrieval-build-build, base: E:\IdeaProjects\Information_Retrieval\project\project, plugins: List(<none>))) took 101.8156ms
[debug] [Loading] Done in E:\IdeaProjects\Information_Retrieval\project\project, returning: (information_retrieval-build-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 2351.6486ms
[debug]                 Load.loadUnit: cleanEvalClasses took 51.6987ms
[debug]               Load.loadUnit(file:/E:/IdeaProjects/Information_Retrieval/project/project/, ...) took 2566.7927ms
[debug]             Load.apply: load took 2721.1514ms
[debug]             Load.apply: resolveProjects took 7.4527ms
[debug]             Load.apply: finalTransforms took 96.9453ms
[debug]             Load.apply: config.delegates took 9.4483ms
[debug]             Load.apply: Def.make(settings)... took 574.4675ms
[debug]             Load.apply: structureIndex took 112.8232ms
[debug]             Load.apply: mkStreams took 2.6132ms
[info] loading project definition from E:\IdeaProjects\Information_Retrieval\project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]           Load.loadUnit: plugins took 5752.9088ms
[debug]           Load.loadUnit: defsScala took 0.0053ms
[debug] [Loading] Scanning directory E:\IdeaProjects\Information_Retrieval\project
[debug]             Load.loadUnit: mkEval took 0.3026ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\IdeaProjects\Information_Retrieval\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.1679 ms
[info] loading settings for project information_retrieval-build from metals.sbt,idea.sbt ...
[debug]               Load.resolveProject(information_retrieval-build) took 31.4706ms
[debug]             Load.loadTransitive: finalizeProject(Project(id information_retrieval-build, base: E:\IdeaProjects\Information_Retrieval\project, plugins: List(<none>))) took 34.3042ms
[debug] [Loading] Done in E:\IdeaProjects\Information_Retrieval\project, returning: (information_retrieval-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1698.0042ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.2763ms
[debug]         Load.loadUnit(file:/E:/IdeaProjects/Information_Retrieval/project/, ...) took 7455.1255ms
[debug]       Load.apply: load took 7457.3117ms
[debug]       Load.apply: resolveProjects took 0.1531ms
[debug]       Load.apply: finalTransforms took 16.5384ms
[debug]       Load.apply: config.delegates took 0.3092ms
[debug]       Load.apply: Def.make(settings)... took 103.8135ms
[debug]       Load.apply: structureIndex took 31.2784ms
[debug]       Load.apply: mkStreams took 0.0038ms
[info] loading project definition from E:\IdeaProjects\Information_Retrieval\project
[debug] Evaluating tasks: bloopInstall
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] sbt-bloop_2.12_1.0-1.5.15-sources.jar no longer exists at \home\dungca\.cache\coursier\v1\https\repo1.maven.org\maven2\ch\epfl\scala\sbt-bloop_2.12_1.0\1.5.15\sbt-bloop_2.12_1.0-1.5.15-sources.jar
[success] Generated .bloop\information_retrieval-build.json
[success] Total time: 4 s, completed May 31, 2024, 9:13:38 PM
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 11890.2136ms
[debug]     Load.loadUnit: defsScala took 0.0094ms
[debug] [Loading] Scanning directory E:\IdeaProjects\Information_Retrieval
[debug]       Load.loadUnit: mkEval took 0.3402ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.2083 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 72.2575ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: E:\IdeaProjects\Information_Retrieval, plugins: List(<none>))) took 76.9487ms
[debug] [Loading] Done in E:\IdeaProjects\Information_Retrieval, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1860.1569ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.4954ms
[debug]   Load.loadUnit(file:/E:/IdeaProjects/Information_Retrieval/, ...) took 13759.2361ms
[debug] Load.apply: load took 13796.5413ms
[debug] Load.apply: resolveProjects took 0.68ms
[debug] Load.apply: finalTransforms took 50.7471ms
[debug] Load.apply: config.delegates took 0.5156ms
[debug] Load.apply: Def.make(settings)... took 135.3734ms
[debug] Load.apply: structureIndex took 28.2246ms
[debug] Load.apply: mkStreams took 0.004ms
[info] set current project to Information_Retrieval (in build file:/E:/IdeaProjects/Information_Retrieval/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49964 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49964, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Information_Retrieval (in build file:/E:/IdeaProjects/Information_Retrieval/)
[debug] > Exec(idea-shell, None, None)
