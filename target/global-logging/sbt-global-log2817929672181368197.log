[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.9 (Oracle Corporation Java 11.0.21)
[debug] Load.defaultLoad until apply took 242.2926ms
[debug]                 Load.loadUnit: plugins took 112.7136ms
[debug]                 Load.loadUnit: defsScala took 0.267ms
[debug] [Loading] Scanning directory D:\Information_Retrieval\project\project
[debug]                   Load.loadUnit: mkEval took 9.5366ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Information_Retrieval\project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 14.3063 ms
[info] loading settings for project information_retrieval-build-build from metals.sbt ...
[debug]                     Load.resolveProject(information_retrieval-build-build) took 48.435ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id information_retrieval-build-build, base: D:\Information_Retrieval\project\project, plugins: List(<none>))) took 86.1405ms
[debug] [Loading] Done in D:\Information_Retrieval\project\project, returning: (information_retrieval-build-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 461.0155ms
[debug]                 Load.loadUnit: cleanEvalClasses took 7.1773ms
[debug]               Load.loadUnit(file:/D:/Information_Retrieval/project/project/, ...) took 589.0771ms
[debug]             Load.apply: load took 707.2427ms
[debug]             Load.apply: resolveProjects took 3.9883ms
[debug]             Load.apply: finalTransforms took 51.4673ms
[debug]             Load.apply: config.delegates took 7.4423ms
[debug]             Load.apply: Def.make(settings)... took 388.7833ms
[debug]             Load.apply: structureIndex took 90.1742ms
[debug]             Load.apply: mkStreams took 2.6149ms
[info] loading project definition from D:\Information_Retrieval\project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]           Load.loadUnit: plugins took 2120.1247ms
[debug]           Load.loadUnit: defsScala took 0.0029ms
[debug] [Loading] Scanning directory D:\Information_Retrieval\project
[debug]             Load.loadUnit: mkEval took 0.1951ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Information_Retrieval\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.3197 ms
[info] loading settings for project information_retrieval-build from metals.sbt ...
[debug]               Load.resolveProject(information_retrieval-build) took 18.3879ms
[debug]             Load.loadTransitive: finalizeProject(Project(id information_retrieval-build, base: D:\Information_Retrieval\project, plugins: List(<none>))) took 21.3202ms
[debug] [Loading] Done in D:\Information_Retrieval\project, returning: (information_retrieval-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 42.8487ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.72ms
[debug]         Load.loadUnit(file:/D:/Information_Retrieval/project/, ...) took 2164.334ms
[debug]       Load.apply: load took 2166.1982ms
[debug]       Load.apply: resolveProjects took 0.1169ms
[debug]       Load.apply: finalTransforms took 14.5333ms
[debug]       Load.apply: config.delegates took 0.4736ms
[debug]       Load.apply: Def.make(settings)... took 79.4335ms
[debug]       Load.apply: structureIndex took 27.8689ms
[debug]       Load.apply: mkStreams took 0.0023ms
[info] loading project definition from D:\Information_Retrieval\project
[debug] Evaluating tasks: bloopInstall
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[success] Generated .bloop\information_retrieval-build.json
[success] Total time: 2 s, completed 10:17:06, 20 thg 3, 2024
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 4931.2906ms
[debug]     Load.loadUnit: defsScala took 0.0018ms
[debug] [Loading] Scanning directory D:\Information_Retrieval
[debug]       Load.loadUnit: mkEval took 0.2016ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.5399 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 22.9716ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\Information_Retrieval, plugins: List(<none>))) took 25.7361ms
[debug] [Loading] Done in D:\Information_Retrieval, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2585.6381ms
[debug]     Load.loadUnit: cleanEvalClasses took 4.5382ms
[debug]   Load.loadUnit(file:/D:/Information_Retrieval/, ...) took 7523.0958ms
[debug] Load.apply: load took 7564.4495ms
[debug] Load.apply: resolveProjects took 0.2014ms
[debug] Load.apply: finalTransforms took 16.8649ms
[debug] Load.apply: config.delegates took 0.4608ms
[debug] Load.apply: Def.make(settings)... took 100.7977ms
[debug] Load.apply: structureIndex took 19.9365ms
[debug] Load.apply: mkStreams took 0.0022ms
[info] set current project to Information_Retrieval (in build file:/D:/Information_Retrieval/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(bloopInstall, None, None)
[debug] Evaluating tasks: bloopInstall
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
