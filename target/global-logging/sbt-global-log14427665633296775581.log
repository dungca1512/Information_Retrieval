[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Admin\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Admin\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.9 (Oracle Corporation Java 11.0.21)
[debug] Load.defaultLoad until apply took 156.4309ms
[debug]                 Load.loadUnit: plugins took 139.7662ms
[debug]                 Load.loadUnit: defsScala took 0.4333ms
[debug] [Loading] Scanning directory D:\Information-Retrieval\project\project
[debug]                   Load.loadUnit: mkEval took 9.1375ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Information-Retrieval\project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 17.9974 ms
[info] loading settings for project information-retrieval-build-build from metals.sbt ...
[debug]                     Load.resolveProject(information-retrieval-build-build) took 51.0206ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id information-retrieval-build-build, base: D:\Information-Retrieval\project\project, plugins: List(<none>))) took 94.3329ms
[debug] [Loading] Done in D:\Information-Retrieval\project\project, returning: (information-retrieval-build-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 450.172ms
[debug]                 Load.loadUnit: cleanEvalClasses took 6.2923ms
[debug]               Load.loadUnit(file:/D:/Information-Retrieval/project/project/, ...) took 603.2042ms
[debug]             Load.apply: load took 731.2475ms
[debug]             Load.apply: resolveProjects took 6.1614ms
[debug]             Load.apply: finalTransforms took 66.0664ms
[debug]             Load.apply: config.delegates took 9.5513ms
[debug]             Load.apply: Def.make(settings)... took 472.185ms
[debug]             Load.apply: structureIndex took 91.9101ms
[debug]             Load.apply: mkStreams took 2.546ms
[info] loading project definition from D:\Information-Retrieval\project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]           Load.loadUnit: plugins took 2390.7768ms
[debug]           Load.loadUnit: defsScala took 0.0088ms
[debug] [Loading] Scanning directory D:\Information-Retrieval\project
[debug]             Load.loadUnit: mkEval took 0.3071ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Information-Retrieval\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.8951 ms
[info] loading settings for project information-retrieval-build from metals.sbt,idea.sbt ...
[debug]               Load.resolveProject(information-retrieval-build) took 29.5744ms
[debug]             Load.loadTransitive: finalizeProject(Project(id information-retrieval-build, base: D:\Information-Retrieval\project, plugins: List(<none>))) took 34.2918ms
[debug] [Loading] Done in D:\Information-Retrieval\project, returning: (information-retrieval-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2583.9217ms
[debug]           Load.loadUnit: cleanEvalClasses took 1.5178ms
[debug]         Load.loadUnit(file:/D:/Information-Retrieval/project/, ...) took 4977.4832ms
[debug]       Load.apply: load took 4979.5313ms
[debug]       Load.apply: resolveProjects took 0.1091ms
[debug]       Load.apply: finalTransforms took 17.5117ms
[debug]       Load.apply: config.delegates took 0.3372ms
[debug]       Load.apply: Def.make(settings)... took 126.9423ms
[debug]       Load.apply: structureIndex took 37.871ms
[debug]       Load.apply: mkStreams took 0.004ms
[info] loading project definition from D:\Information-Retrieval\project
[debug] Evaluating tasks: bloopInstall
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[success] Generated .bloop\information-retrieval-build.json
[success] Total time: 4 s, completed 19:50:05, 14 thg 3, 2024
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 9571.5043ms
[debug]     Load.loadUnit: defsScala took 0.0027ms
[debug] [Loading] Scanning directory D:\Information-Retrieval
[debug]       Load.loadUnit: mkEval took 0.2219ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.5433 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 72.2082ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\Information-Retrieval, plugins: List(<none>))) took 78.5416ms
[debug] [Loading] Done in D:\Information-Retrieval, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1556.4505ms
[debug]     Load.loadUnit: cleanEvalClasses took 4.6171ms
[debug]   Load.loadUnit(file:/D:/Information-Retrieval/, ...) took 11134.216ms
[debug] Load.apply: load took 11163.6302ms
[debug] Load.apply: resolveProjects took 0.1851ms
[debug] Load.apply: finalTransforms took 41.252ms
[debug] Load.apply: config.delegates took 0.3147ms
[debug] Load.apply: Def.make(settings)... took 82.2186ms
[debug] Load.apply: structureIndex took 24.9619ms
[debug] Load.apply: mkStreams took 0.0033ms
[info] set current project to Information_Retrieval (in build file:/D:/Information-Retrieval/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 51146 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 51146, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Information_Retrieval (in build file:/D:/Information-Retrieval/)
[debug] > Exec(idea-shell, None, None)
