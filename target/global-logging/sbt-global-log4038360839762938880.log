[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Admin\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Admin\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.9 (Oracle Corporation Java 11.0.21)
[debug] Load.defaultLoad until apply took 187.1259ms
[debug]                 Load.loadUnit: plugins took 123.5175ms
[debug]                 Load.loadUnit: defsScala took 0.4122ms
[debug] [Loading] Scanning directory D:\Information_Retrieval\project\project
[debug]                   Load.loadUnit: mkEval took 22.8797ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Information_Retrieval\project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 17.9449 ms
[info] loading settings for project information_retrieval-build-build from metals.sbt ...
[debug]                     Load.resolveProject(information_retrieval-build-build) took 47.1377ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id information_retrieval-build-build, base: D:\Information_Retrieval\project\project, plugins: List(<none>))) took 91.2517ms
[debug] [Loading] Done in D:\Information_Retrieval\project\project, returning: (information_retrieval-build-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 678.1596ms
[debug]                 Load.loadUnit: cleanEvalClasses took 5.4786ms
[debug]               Load.loadUnit(file:/D:/Information_Retrieval/project/project/, ...) took 814.6249ms
[debug]             Load.apply: load took 942.6915ms
[debug]             Load.apply: resolveProjects took 4.9222ms
[debug]             Load.apply: finalTransforms took 58.8768ms
[debug]             Load.apply: config.delegates took 8.7677ms
[debug]             Load.apply: Def.make(settings)... took 477.2697ms
[debug]             Load.apply: structureIndex took 118.7143ms
[debug]             Load.apply: mkStreams took 1.8516ms
[info] loading project definition from D:\Information_Retrieval\project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]           Load.loadUnit: plugins took 2621.8172ms
[debug]           Load.loadUnit: defsScala took 0.0029ms
[debug] [Loading] Scanning directory D:\Information_Retrieval\project
[debug]             Load.loadUnit: mkEval took 0.2132ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Information_Retrieval\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.515 ms
[info] loading settings for project information_retrieval-build from metals.sbt,idea.sbt ...
[debug]               Load.resolveProject(information_retrieval-build) took 20.3503ms
[debug]             Load.loadTransitive: finalizeProject(Project(id information_retrieval-build, base: D:\Information_Retrieval\project, plugins: List(<none>))) took 22.3479ms
[debug] [Loading] Done in D:\Information_Retrieval\project, returning: (information_retrieval-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 80.8653ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.6644ms
[debug]         Load.loadUnit(file:/D:/Information_Retrieval/project/, ...) took 2703.9841ms
[debug]       Load.apply: load took 2705.7505ms
[debug]       Load.apply: resolveProjects took 0.1496ms
[debug]       Load.apply: finalTransforms took 14.7464ms
[debug]       Load.apply: config.delegates took 0.3552ms
[debug]       Load.apply: Def.make(settings)... took 90.4702ms
[debug]       Load.apply: structureIndex took 37.3938ms
[debug]       Load.apply: mkStreams took 0.0036ms
[info] loading project definition from D:\Information_Retrieval\project
[debug] Evaluating tasks: bloopInstall
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[success] Generated .bloop\information_retrieval-build.json
[success] Total time: 3 s, completed Mar 23, 2024, 4:06:45 PM
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 5891.8961ms
[debug]     Load.loadUnit: defsScala took 0.0051ms
[debug] [Loading] Scanning directory D:\Information_Retrieval
[debug]       Load.loadUnit: mkEval took 0.3404ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.4408 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 51.9425ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\Information_Retrieval, plugins: List(<none>))) took 55.2873ms
[debug] [Loading] Done in D:\Information_Retrieval, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 132.9399ms
[debug]     Load.loadUnit: cleanEvalClasses took 2.315ms
[debug]   Load.loadUnit(file:/D:/Information_Retrieval/, ...) took 6029.1355ms
[debug] Load.apply: load took 6062.108ms
[debug] Load.apply: resolveProjects took 0.1913ms
[debug] Load.apply: finalTransforms took 25.228ms
[debug] Load.apply: config.delegates took 0.3168ms
[debug] Load.apply: Def.make(settings)... took 75.275ms
[debug] Load.apply: structureIndex took 25.1116ms
[debug] Load.apply: mkStreams took 0.0037ms
[info] set current project to Information_Retrieval (in build file:/D:/Information_Retrieval/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 53662 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 53662, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Information_Retrieval (in build file:/D:/Information_Retrieval/)
[debug] > Exec(idea-shell, None, None)
