[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Admin\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Admin\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.9 (Oracle Corporation Java 11.0.22)
[debug] Load.defaultLoad until apply took 268.0657ms
[debug]                 Load.loadUnit: plugins took 164.5707ms
[debug]                 Load.loadUnit: defsScala took 0.505699ms
[debug] [Loading] Scanning directory E:\IdeaProjects\Information_Retrieval\project\project
[debug]                   Load.loadUnit: mkEval took 13.3916ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\IdeaProjects\Information_Retrieval\project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 21.199601 ms
[info] loading settings for project information_retrieval-build-build from metals.sbt ...
[debug]                     Load.resolveProject(information_retrieval-build-build) took 71.353099ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id information_retrieval-build-build, base: E:\IdeaProjects\Information_Retrieval\project\project, plugins: List(<none>))) took 128.3636ms
[debug] [Loading] Done in E:\IdeaProjects\Information_Retrieval\project\project, returning: (information_retrieval-build-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 616.111701ms
[debug]                 Load.loadUnit: cleanEvalClasses took 8.3934ms
[debug]               Load.loadUnit(file:/E:/IdeaProjects/Information_Retrieval/project/project/, ...) took 797.743599ms
[debug]             Load.apply: load took 989.949ms
[debug]             Load.apply: resolveProjects took 8.8298ms
[debug]             Load.apply: finalTransforms took 104.227801ms
[debug]             Load.apply: config.delegates took 14.7517ms
[debug]             Load.apply: Def.make(settings)... took 705.876599ms
[debug]             Load.apply: structureIndex took 169.543001ms
[debug]             Load.apply: mkStreams took 7.128ms
[info] loading project definition from E:\IdeaProjects\Information_Retrieval\project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]           Load.loadUnit: plugins took 3359.997599ms
[debug]           Load.loadUnit: defsScala took 0.0061ms
[debug] [Loading] Scanning directory E:\IdeaProjects\Information_Retrieval\project
[debug]             Load.loadUnit: mkEval took 0.350799ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\IdeaProjects\Information_Retrieval\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.577 ms
[info] loading settings for project information_retrieval-build from metals.sbt,idea.sbt ...
[debug]               Load.resolveProject(information_retrieval-build) took 36.5926ms
[debug]             Load.loadTransitive: finalizeProject(Project(id information_retrieval-build, base: E:\IdeaProjects\Information_Retrieval\project, plugins: List(<none>))) took 41.0744ms
[debug] [Loading] Done in E:\IdeaProjects\Information_Retrieval\project, returning: (information_retrieval-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 146.0918ms
[debug]           Load.loadUnit: cleanEvalClasses took 1.2502ms
[debug]         Load.loadUnit(file:/E:/IdeaProjects/Information_Retrieval/project/, ...) took 3508.528599ms
[debug]       Load.apply: load took 3511.1551ms
[debug]       Load.apply: resolveProjects took 0.1994ms
[debug]       Load.apply: finalTransforms took 27.2877ms
[debug]       Load.apply: config.delegates took 0.7364ms
[debug]       Load.apply: Def.make(settings)... took 117.424901ms
[debug]       Load.apply: structureIndex took 50.6307ms
[debug]       Load.apply: mkStreams took 0.0034ms
[info] loading project definition from E:\IdeaProjects\Information_Retrieval\project
[debug] Evaluating tasks: bloopInstall
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[success] Generated .bloop\information_retrieval-build.json
[success] Total time: 4 s, completed Jun 4, 2024, 9:45:15 PM
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 8127.6894ms
[debug]     Load.loadUnit: defsScala took 0.004499ms
[debug] [Loading] Scanning directory E:\IdeaProjects\Information_Retrieval
[debug]       Load.loadUnit: mkEval took 0.2303ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.590499 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 91.062ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: E:\IdeaProjects\Information_Retrieval, plugins: List(<none>))) took 96.2269ms
[debug] [Loading] Done in E:\IdeaProjects\Information_Retrieval, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 201.9603ms
[debug]     Load.loadUnit: cleanEvalClasses took 2.9809ms
[debug]   Load.loadUnit(file:/E:/IdeaProjects/Information_Retrieval/, ...) took 8334.959499ms
[debug] Load.apply: load took 8383.8433ms
[debug] Load.apply: resolveProjects took 0.2035ms
[debug] Load.apply: finalTransforms took 42.8818ms
[debug] Load.apply: config.delegates took 0.43ms
[debug] Load.apply: Def.make(settings)... took 107.4043ms
[debug] Load.apply: structureIndex took 31.9022ms
[debug] Load.apply: mkStreams took 0.003899ms
[info] set current project to Information_Retrieval (in build file:/E:/IdeaProjects/Information_Retrieval/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49859 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49859, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Information_Retrieval (in build file:/E:/IdeaProjects/Information_Retrieval/)
[debug] > Exec(idea-shell, None, None)
